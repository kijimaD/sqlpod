* サブクエリ
** サブクエリ
#+begin_src sql

SELECT ccd.complaint_id,
       ccd.product,
       ccd.company,
       ccd.zip_code
FROM
  (SELECT complaint_id,
          product,
          company,
          zip_code
   FROM credit_card_complaints
   WHERE zip_code = '91701') ccd
LIMIT 10;
#+end_src

#+begin_src
  complaint_id      product               company zip_code
0        24857  Credit card          Barclays PLC    91701
1        33157  Credit card              Citibank    91701
2        12245  Credit card       Bank of America    91701
3         3151  Credit card          Barclays PLC    91701
4       352534  Credit card              Citibank    91701
5      1963836  Credit card  JPMorgan Chase & Co.    91701
6      2178015  Credit card              Discover    91701
7      2234754  Credit card              Discover    91701
8      2235915  Credit card              Discover    91701
#+end_src
** サブクエリの中の方
#+begin_src sql

SELECT complaint_id,
       product,
       company,
       zip_code
FROM credit_card_complaints
WHERE zip_code = '91701'
#+end_src

#+begin_src
  complaint_id      product               company zip_code
0        24857  Credit card          Barclays PLC    91701
1        33157  Credit card              Citibank    91701
2        12245  Credit card       Bank of America    91701
3         3151  Credit card          Barclays PLC    91701
4       352534  Credit card              Citibank    91701
5      1963836  Credit card  JPMorgan Chase & Co.    91701
6      2178015  Credit card              Discover    91701
7      2234754  Credit card              Discover    91701
8      2235915  Credit card              Discover    91701
#+end_src
** 申立の数が多い会社ランキング
#+begin_src sql

SELECT company,
       state,
       zip_code,
       count(complaint_id) AS complaint_count
FROM credit_card_complaints
WHERE company = 'Citibank'
  AND state IS NOT NULL
GROUP BY company,
         state,
         zip_code
ORDER BY 4 DESC
LIMIT 10;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
1  Citibank    TX    750XX               67
2  Citibank    CA    945XX               58
3  Citibank    NY    112XX               52
4  Citibank    CA    900XX               50
5  Citibank    GA    300XX               46
6  Citibank    NJ    070XX               44
7  Citibank    IL    606XX               44
8  Citibank    FL    331XX               39
9  Citibank    CA    926XX               38
#+end_src
** ↑さっきのクエリに対する加工。外側のGROUP BYにより州ごとで一つになった
#+begin_src sql

SELECT ppt.company,
       ppt.state,
       max(ppt.complaint_count) AS complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE company = 'Citibank'
     AND state IS NOT NULL
   GROUP BY company,
            state,
            zip_code
   ORDER BY 4 DESC) ppt
GROUP BY ppt.company,
         ppt.state
ORDER BY 3 DESC
LIMIT 10;
#+end_src

#+begin_src
    company state  complaint_count
0  Citibank    NY               80
1  Citibank    TX               67
2  Citibank    CA               58
3  Citibank    GA               46
4  Citibank    IL               44
5  Citibank    NJ               44
6  Citibank    FL               39
7  Citibank    VA               32
8  Citibank    MD               32
9  Citibank    DC               31
#+end_src
** 複数のサブクエリ…最終的に最大の申し立て件数を取得する
#+begin_src sql

SELECT ens.company,
       ens.state,
       ens.zip_code,
       ens.complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE state IS NOT NULL
   GROUP BY company,
            state,
            zip_code) ens
INNER JOIN
  (SELECT ppx.company,
          max(ppx.complaint_count) AS complaint_count
   FROM
     (SELECT ppt.company,
             ppt.state,
             max(ppt.complaint_count) AS complaint_count
      FROM
        (SELECT company,
                state,
                zip_code,
                count(complaint_id) AS complaint_count
         FROM credit_card_complaints
         WHERE company = 'Citibank'
           AND state IS NOT NULL
         GROUP BY company,
                  state,
                  zip_code
         ORDER BY 4 DESC) ppt
      GROUP BY ppt.company,
               ppt.state
      ORDER BY 3 DESC) ppx
   GROUP BY ppx.company) apx ON apx.company = ens.company
AND apx.complaint_count = ens.complaint_count
ORDER BY 4 DESC;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
#+end_src
** ↑の件数一覧にしたバージョン…のはずだが中身が変わらない
#+begin_src sql

SELECT ens.company,
       ens.state,
       ens.zip_code,
       ens.complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE state IS NOT NULL
   GROUP BY company,
            state,
            zip_code) ens
INNER JOIN
  (SELECT ppx.company,
          max(ppx.complaint_count) AS complaint_count
   FROM
     (SELECT ppt.company,
             ppt.state,
             max(ppt.complaint_count) AS complaint_count
      FROM
        (SELECT company,
                state,
                zip_code,
                count(complaint_id) AS complaint_count
         FROM credit_card_complaints
         WHERE company = 'Citibank'
           AND state IS NOT NULL
         GROUP BY company,
                  state,
                  zip_code
         ORDER BY 4 DESC) ppt
      GROUP BY ppt.company,
               ppt.state
      ORDER BY 3 DESC) ppx
   GROUP BY ppx.company) apx ON apx.company = ens.company
AND apx.complaint_count = ens.complaint_count
ORDER BY 4 DESC;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
#+end_src
* 練習問題
** 会社数でカウント
#+begin_src sql

SELECT company,
       count(company) AS company_amt
FROM credit_card_complaints
GROUP BY company
ORDER BY company_amt DESC
#+end_src

#+begin_src
                              company  company_amt
0                            Citibank        16561
1                         Capital One        12740
2                JPMorgan Chase & Co.        10203
3                     Bank of America         8995
4                 Synchrony Financial         8637
..                                ...          ...
416           Allied Data Corporation            1
417                 Asta Funding, Inc            1
418         Van Ru Credit Corporation            1
419                Razor Capital, LLC            1
420  Regional Acquisition Group, Inc.            1

[421 rows x 2 columns]
#+end_src
** ↑に全レコードカウントカラムを追加した
#+begin_src sql

SELECT company,
       count(company) AS company_amt,

  (SELECT count(*)
   FROM credit_card_complaints) AS total
FROM credit_card_complaints
GROUP BY company
ORDER BY company_amt DESC
#+end_src

#+begin_src
                              company  company_amt  total
0                            Citibank        16561  87718
1                         Capital One        12740  87718
2                JPMorgan Chase & Co.        10203  87718
3                     Bank of America         8995  87718
4                 Synchrony Financial         8637  87718
..                                ...          ...    ...
416           Allied Data Corporation            1  87718
417                 Asta Funding, Inc            1  87718
418         Van Ru Credit Corporation            1  87718
419                Razor Capital, LLC            1  87718
420  Regional Acquisition Group, Inc.            1  87718

[421 rows x 3 columns]
#+end_src
** ↑をfromをネストした(結果は同じ)
#+begin_src sql

SELECT *
FROM
  (SELECT company,
          COUNT(company) AS company_amt,

     (SELECT COUNT(*)
      FROM credit_card_complaints) AS total
   FROM credit_card_complaints
   GROUP BY company
   ORDER BY company_amt DESC) ppg
#+end_src

#+begin_src
                              company  company_amt  total
0                            Citibank        16561  87718
1                         Capital One        12740  87718
2                JPMorgan Chase & Co.        10203  87718
3                     Bank of America         8995  87718
4                 Synchrony Financial         8637  87718
..                                ...          ...    ...
416           Allied Data Corporation            1  87718
417                 Asta Funding, Inc            1  87718
418         Van Ru Credit Corporation            1  87718
419                Razor Capital, LLC            1  87718
420  Regional Acquisition Group, Inc.            1  87718

[421 rows x 3 columns]
#+end_src
** ↑で作成したカラム同士の計算を行う(このクエリはdataworldではキャストがエラーになる)
#+begin_src sql

SELECT ppg.company,
       ppg.company_amt,
       ppg.total,
       ((CAST(ppg.company_amt AS float) / CAST(ppg.total AS float)) * 100) AS percent
FROM
  (SELECT company,
          COUNT(company) AS company_amt,

     (SELECT COUNT(*)
      FROM credit_card_complaints) AS total
   FROM credit_card_complaints
   GROUP BY company
   ORDER BY company_amt DESC) ppg;
#+end_src

#+begin_src
                              company  company_amt  total    percent
0                            Citibank        16561  87718  18.879819
1                         Capital One        12740  87718  14.523815
2                JPMorgan Chase & Co.        10203  87718  11.631592
3                     Bank of America         8995  87718  10.254452
4                 Synchrony Financial         8637  87718   9.846326
..                                ...          ...    ...        ...
416           Allied Data Corporation            1  87718   0.001140
417                 Asta Funding, Inc            1  87718   0.001140
418         Van Ru Credit Corporation            1  87718   0.001140
419                Razor Capital, LLC            1  87718   0.001140
420  Regional Acquisition Group, Inc.            1  87718   0.001140

[421 rows x 4 columns]
#+end_src
* 基本的操作
** ASでカラムに別名をつける。dataworldではダブルクオートをつけても日本語を使えないよう
#+begin_src sql

SELECT issue AS mondai
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
                                 mondai
0                     Billing statement
1                  APR or interest rate
2                    Delinquent account
3                      Billing disputes
4         Credit line increase/decrease
..                                  ...
95  Unsolicited issuance of credit card
96                       Payoff process
97                     Billing disputes
98                    Billing statement
99                                Other

[100 rows x 1 columns]
#+end_src
** DISTINCTを使ってcompanyの重複をなくす
#+begin_src sql

SELECT DISTINCT company
FROM credit_card_complaints;
#+end_src

#+begin_src
                              company
0              Goldman Sachs Bank USA
1     Automatic Data Processing, Inc.
2          Citi Management Group, LLC
3     Lyons, Doughty & Veldhuis, P.C.
4           Weinman Acquisition Group
..                                ...
416     Federated Capital Corporation
417                          Experian
418                      Conn's, Inc.
419                Razor Capital, LLC
420  Regional Acquisition Group, Inc.

[421 rows x 1 columns]
#+end_src
** DISTINCTしたレコードのほかのカラムを出す
#+begin_src sql

SELECT DISTINCT company,
                state
FROM credit_card_complaints;
#+end_src

#+begin_src
                               company state
0                         E*Trade Bank    MA
1                          Capital One    TX
2                        Commerce Bank    KS
3     Continental Finance Company, LLC    GA
4                         Barclays PLC    IN
...                                ...   ...
2569                     PNC Bank N.A.    VA
2570      Platinum Holdings Group, LLC    PA
2571               Ally Financial Inc.    MO
2572              First Tennessee Bank    TX
2573                   Associated Bank    AZ

[2574 rows x 2 columns]
#+end_src
** WHEREで条件指定する
#+begin_src sql

SELECT issue
FROM credit_card_complaints
WHERE company = 'Citibank'
LIMIT 100;
#+end_src

#+begin_src
                                  issue
0                     Billing statement
1         Credit line increase/decrease
2            Closing/Cancelling account
3                        Payoff process
4                      Billing disputes
..                                  ...
95                     Billing disputes
96                     Billing disputes
97                             Late fee
98            Advertising and marketing
99  Unsolicited issuance of credit card

[100 rows x 1 columns]
#+end_src
** 値を2倍にしたカラムを作成
#+begin_src sql

SELECT complaint_id,
       (CAST(complaint_id AS float) * 2) AS complaint_id_x2
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
   complaint_id  complaint_id_x2
0        469026         938052.0
1        469131         938262.0
2        479990         959980.0
3        475777         951554.0
4        469473         938946.0
..          ...              ...
95       466061         932122.0
96       466091         932182.0
97       464970         929940.0
98       465004         930008.0
99       482668         965336.0

[100 rows x 2 columns]
#+end_src
** 計算機として使う...FROMは不要
#+begin_src sql

SELECT 100 * 3 AS keisan;
#+end_src

#+begin_src
   keisan
0     300
#+end_src
** 否定演算子 - 結果はNo results
#+begin_src sql

SELECT *
FROM credit_card_complaints
WHERE product <> 'Credit card'
LIMIT 100;
#+end_src

#+begin_src
Empty DataFrame
Columns: [complaint_id, date_received, product, sub_product, issue, sub_issue, consumer_complaint_narrative, company_public_response, company, state, zip_code, tags, consumer_consent_provided, submitted_via, date_sent, company_response_to_consumer, timely_response, consumer_disputed]
Index: []
#+end_src
** 数値で条件指定
#+begin_src sql

SELECT complaint_id
FROM credit_card_complaints
WHERE CAST(complaint_id AS float) >= 460000
LIMIT 100;
#+end_src

#+begin_src
   complaint_id
0        469026
1        469131
2        479990
3        475777
4        469473
..          ...
95       466091
96       464970
97       465004
98       482668
99       465017

[100 rows x 1 columns]
#+end_src
* キャスト
** floatに型キャストする
#+begin_src sql

SELECT CAST(complaint_id AS float) AS complaint_id
FROM bank_account_complaints
LIMIT 10;
#+end_src

#+begin_src
   complaint_id
0      468889.0
1      468879.0
2      468949.0
3      468981.0
4      469185.0
5      475273.0
6      469309.0
7      469414.0
8      469446.0
9      469447.0
#+end_src
** intに型キャストする
#+begin_src sql

SELECT CAST(complaint_id AS int) AS complaint_id,
       date_received,
       product,
       sub_product,
       issue,
       company,
       state,
       zip_code,
       submitted_via,
       date_sent,
       company_response_to_consumer,
       timely_response,
       consumer_disputed
FROM bank_account_complaints
WHERE state = 'CA'
  AND consumer_disputed = 'No'
  AND company = 'Wells Fargo & Company'
LIMIT 5;
#+end_src

#+begin_src
   complaint_id date_received  ... timely_response consumer_disputed
0        468889    2013-07-29  ...             Yes                No
1        469185    2013-07-29  ...             Yes                No
2        469446    2013-07-29  ...             Yes                No
3        471075    2013-07-31  ...             Yes                No
4        463525    2013-07-22  ...             Yes                No

[5 rows x 13 columns]
#+end_src
* 使い方
** 全表示
#+begin_src sql

SELECT *
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
   complaint_id date_received  ... timely_response consumer_disputed
0        469026    2013-07-29  ...             Yes               Yes
1        469131    2013-07-29  ...             Yes                No
2        479990    2013-07-29  ...             Yes                No
3        475777    2013-07-29  ...             Yes                No
4        469473    2013-07-29  ...             Yes               Yes
..          ...           ...  ...             ...               ...
95       466061    2013-07-25  ...             Yes                No
96       466091    2013-07-25  ...             Yes                No
97       464970    2013-07-24  ...             Yes                No
98       465004    2013-07-24  ...             Yes                No
99       482668    2013-08-07  ...             Yes                No

[100 rows x 18 columns]
#+end_src
** COUNT
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints;
#+end_src

#+begin_src
   count
0  87718
#+end_src
** where: IS NOT NULL
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src

#+begin_src
   count
0  17433
#+end_src
** where: IS NULL
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src

#+begin_src
   count
0  70285
#+end_src
* ビュー
** credit_wを作成する(command)
#+begin_src sql

CREATE VIEW credit_card_w_complaints AS
SELECT *
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src
** credit_woを作成する(command)
#+begin_src sql

CREATE VIEW credit_card_wo_complaints AS
SELECT *
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src
** bank_wを作成する(command)
#+begin_src sql

CREATE VIEW bank_account_w_complaints AS
SELECT *
FROM bank_account_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src
** bank_woを作成する(command)
#+begin_src sql

CREATE VIEW bank_account_wo_complaints AS
SELECT *
FROM bank_account_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src
** viewから取得する
#+begin_src sql

SELECT *
FROM credit_card_w_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0      1297939    2015-03-24  ...             Yes                No
1      1296693    2015-03-23  ...             Yes               Yes
2      1295056    2015-03-23  ...             Yes                No
3      1296880    2015-03-23  ...             Yes                No
4      1296890    2015-03-23  ...             Yes                No

[5 rows x 18 columns]
#+end_src
** UNION(command)
#+begin_src sql

CREATE VIEW with_complaints AS
SELECT *
FROM credit_card_w_complaints
UNION ALL
SELECT *
FROM bank_account_w_complaints;
#+end_src
** with_complaints表示
#+begin_src sql

SELECT *
FROM with_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0      1297939    2015-03-24  ...             Yes                No
1      1296693    2015-03-23  ...             Yes               Yes
2      1295056    2015-03-23  ...             Yes                No
3      1296880    2015-03-23  ...             Yes                No
4      1296890    2015-03-23  ...             Yes                No

[5 rows x 18 columns]
#+end_src
** UNION(command)
#+begin_src sql

CREATE VIEW without_complaints AS
SELECT *
FROM credit_card_wo_complaints
UNION ALL
SELECT *
FROM bank_account_wo_complaints;
#+end_src
** without_complaints表示
#+begin_src sql

SELECT *
FROM without_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0       469026    2013-07-29  ...             Yes               Yes
1       469131    2013-07-29  ...             Yes                No
2       479990    2013-07-29  ...             Yes                No
3       475777    2013-07-29  ...             Yes                No
4       469473    2013-07-29  ...             Yes               Yes

[5 rows x 18 columns]
#+end_src
** credit_card_without_complaints
#+begin_src sql

SELECT count(*)
FROM credit_card_wo_complaints;
#+end_src

#+begin_src
   count
0  70285
#+end_src
** 申し立てがない
#+begin_src sql

SELECT count(*)
FROM without_complaints
#+end_src

#+begin_src
    count
0  141236
#+end_src
** クレジットカードの申立がないものを除外
#+begin_src sql

SELECT count(*)
FROM
  (SELECT *
   FROM without_complaints
   EXCEPT SELECT *
   FROM credit_card_wo_complaints) ppg;
#+end_src

#+begin_src
   count
0  70951
#+end_src
** 合成したカラムを表示する
#+begin_src sql

SELECT complaint_id,
       product,
       company,
       zip_code,
       complaint_id || '-' || product || '-' || company || '-' || zip_code AS CONCAT
FROM credit_card_complaints
LIMIT 10
#+end_src

#+begin_src
  complaint_id      product  ... zip_code                                          concat
0       469026  Credit card  ...    45247               469026-Credit card-Citibank-45247
1       469131  Credit card  ...    98548    469131-Credit card-Synchrony Financial-98548
2       479990  Credit card  ...    78232                   479990-Credit card-Amex-78232
3       475777  Credit card  ...    32226            475777-Credit card-Capital One-32226
4       469473  Credit card  ...    53066               469473-Credit card-Citibank-53066
5       470828  Credit card  ...    89108  470828-Credit card-Wells Fargo & Company-89108
6       470852  Credit card  ...    78249               470852-Credit card-Citibank-78249
7       479338  Credit card  ...    19809   479338-Credit card-JPMorgan Chase & Co.-19809
8       480935  Credit card  ...    07018               480935-Credit card-Citibank-07018
9       469738  Credit card  ...    95409  469738-Credit card-Wells Fargo & Company-95409

[10 rows x 5 columns]
#+end_src
