* サブクエリ
** サブクエリ
#+begin_src sql

SELECT ccd.complaint_id,
       ccd.product,
       ccd.company,
       ccd.zip_code
FROM
  (SELECT complaint_id,
          product,
          company,
          zip_code
   FROM credit_card_complaints
   WHERE zip_code = '91701') ccd
LIMIT 10;
#+end_src

#+begin_src
  complaint_id      product               company zip_code
0        24857  Credit card          Barclays PLC    91701
1        33157  Credit card              Citibank    91701
2        12245  Credit card       Bank of America    91701
3         3151  Credit card          Barclays PLC    91701
4       352534  Credit card              Citibank    91701
5      1963836  Credit card  JPMorgan Chase & Co.    91701
6      2178015  Credit card              Discover    91701
7      2234754  Credit card              Discover    91701
8      2235915  Credit card              Discover    91701
#+end_src
** サブクエリの中の方
#+begin_src sql

SELECT complaint_id,
       product,
       company,
       zip_code
FROM credit_card_complaints
WHERE zip_code = '91701'
#+end_src

#+begin_src
  complaint_id      product               company zip_code
0        24857  Credit card          Barclays PLC    91701
1        33157  Credit card              Citibank    91701
2        12245  Credit card       Bank of America    91701
3         3151  Credit card          Barclays PLC    91701
4       352534  Credit card              Citibank    91701
5      1963836  Credit card  JPMorgan Chase & Co.    91701
6      2178015  Credit card              Discover    91701
7      2234754  Credit card              Discover    91701
8      2235915  Credit card              Discover    91701
#+end_src
** 申立の数が多い会社ランキング
#+begin_src sql

SELECT company,
       state,
       zip_code,
       count(complaint_id) AS complaint_count
FROM credit_card_complaints
WHERE company = 'Citibank'
  AND state IS NOT NULL
GROUP BY company,
         state,
         zip_code
ORDER BY 4 DESC
LIMIT 10;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
1  Citibank    TX    750XX               67
2  Citibank    CA    945XX               58
3  Citibank    NY    112XX               52
4  Citibank    CA    900XX               50
5  Citibank    GA    300XX               46
6  Citibank    NJ    070XX               44
7  Citibank    IL    606XX               44
8  Citibank    FL    331XX               39
9  Citibank    CA    926XX               38
#+end_src
** ↑さっきのクエリに対する加工。外側のGROUP BYにより州ごとで一つになった
#+begin_src sql

SELECT ppt.company,
       ppt.state,
       max(ppt.complaint_count) AS complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE company = 'Citibank'
     AND state IS NOT NULL
   GROUP BY company,
            state,
            zip_code
   ORDER BY 4 DESC) ppt
GROUP BY ppt.company,
         ppt.state
ORDER BY 3 DESC
LIMIT 10;
#+end_src

#+begin_src
    company state  complaint_count
0  Citibank    NY               80
1  Citibank    TX               67
2  Citibank    CA               58
3  Citibank    GA               46
4  Citibank    IL               44
5  Citibank    NJ               44
6  Citibank    FL               39
7  Citibank    VA               32
8  Citibank    MD               32
9  Citibank    DC               31
#+end_src
** 複数のサブクエリ…最終的に最大の申し立て件数を取得する
#+begin_src sql

SELECT ens.company,
       ens.state,
       ens.zip_code,
       ens.complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE state IS NOT NULL
   GROUP BY company,
            state,
            zip_code) ens
INNER JOIN
  (SELECT ppx.company,
          max(ppx.complaint_count) AS complaint_count
   FROM
     (SELECT ppt.company,
             ppt.state,
             max(ppt.complaint_count) AS complaint_count
      FROM
        (SELECT company,
                state,
                zip_code,
                count(complaint_id) AS complaint_count
         FROM credit_card_complaints
         WHERE company = 'Citibank'
           AND state IS NOT NULL
         GROUP BY company,
                  state,
                  zip_code
         ORDER BY 4 DESC) ppt
      GROUP BY ppt.company,
               ppt.state
      ORDER BY 3 DESC) ppx
   GROUP BY ppx.company) apx ON apx.company = ens.company
AND apx.complaint_count = ens.complaint_count
ORDER BY 4 DESC;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
#+end_src
** ↑の件数一覧にしたバージョン…のはずだが中身が変わらない
#+begin_src sql

SELECT ens.company,
       ens.state,
       ens.zip_code,
       ens.complaint_count
FROM
  (SELECT company,
          state,
          zip_code,
          count(complaint_id) AS complaint_count
   FROM credit_card_complaints
   WHERE state IS NOT NULL
   GROUP BY company,
            state,
            zip_code) ens
INNER JOIN
  (SELECT ppx.company,
          max(ppx.complaint_count) AS complaint_count
   FROM
     (SELECT ppt.company,
             ppt.state,
             max(ppt.complaint_count) AS complaint_count
      FROM
        (SELECT company,
                state,
                zip_code,
                count(complaint_id) AS complaint_count
         FROM credit_card_complaints
         WHERE company = 'Citibank'
           AND state IS NOT NULL
         GROUP BY company,
                  state,
                  zip_code
         ORDER BY 4 DESC) ppt
      GROUP BY ppt.company,
               ppt.state
      ORDER BY 3 DESC) ppx
   GROUP BY ppx.company) apx ON apx.company = ens.company
AND apx.complaint_count = ens.complaint_count
ORDER BY 4 DESC;
#+end_src

#+begin_src
    company state zip_code  complaint_count
0  Citibank    NY    100XX               80
#+end_src
* 練習問題
** 会社数でカウント
#+begin_src sql

SELECT company,
       count(company) AS company_amt
FROM credit_card_complaints
GROUP BY company
ORDER BY company_amt DESC
#+end_src

#+begin_src
                              company  company_amt
0                            Citibank        16561
1                         Capital One        12740
2                JPMorgan Chase & Co.        10203
3                     Bank of America         8995
4                 Synchrony Financial         8637
..                                ...          ...
416           Allied Data Corporation            1
417                 Asta Funding, Inc            1
418         Van Ru Credit Corporation            1
419                Razor Capital, LLC            1
420  Regional Acquisition Group, Inc.            1

[421 rows x 2 columns]
#+end_src
** ↑に全レコードカウントカラムを追加した
#+begin_src sql

SELECT company,
       count(company) AS company_amt,

  (SELECT count(*)
   FROM credit_card_complaints) AS total
FROM credit_card_complaints
GROUP BY company
ORDER BY company_amt DESC
#+end_src

#+begin_src
                              company  company_amt  total
0                            Citibank        16561  87718
1                         Capital One        12740  87718
2                JPMorgan Chase & Co.        10203  87718
3                     Bank of America         8995  87718
4                 Synchrony Financial         8637  87718
..                                ...          ...    ...
416           Allied Data Corporation            1  87718
417                 Asta Funding, Inc            1  87718
418         Van Ru Credit Corporation            1  87718
419                Razor Capital, LLC            1  87718
420  Regional Acquisition Group, Inc.            1  87718

[421 rows x 3 columns]
#+end_src
** ↑をfromをネストした(結果は同じ)
#+begin_src sql

SELECT *
FROM
  (SELECT company,
          COUNT(company) AS company_amt,

     (SELECT COUNT(*)
      FROM credit_card_complaints) AS total
   FROM credit_card_complaints
   GROUP BY company
   ORDER BY company_amt DESC) ppg
#+end_src

#+begin_src
                              company  company_amt  total
0                            Citibank        16561  87718
1                         Capital One        12740  87718
2                JPMorgan Chase & Co.        10203  87718
3                     Bank of America         8995  87718
4                 Synchrony Financial         8637  87718
..                                ...          ...    ...
416           Allied Data Corporation            1  87718
417                 Asta Funding, Inc            1  87718
418         Van Ru Credit Corporation            1  87718
419                Razor Capital, LLC            1  87718
420  Regional Acquisition Group, Inc.            1  87718

[421 rows x 3 columns]
#+end_src
** ↑で作成したカラム同士の計算を行う(このクエリはdataworldではキャストがエラーになる)
#+begin_src sql

SELECT ppg.company,
       ppg.company_amt,
       ppg.total,
       ((CAST(ppg.company_amt AS float) / CAST(ppg.total AS float)) * 100) AS percent
FROM
  (SELECT company,
          COUNT(company) AS company_amt,

     (SELECT COUNT(*)
      FROM credit_card_complaints) AS total
   FROM credit_card_complaints
   GROUP BY company
   ORDER BY company_amt DESC) ppg;
#+end_src

#+begin_src
                              company  company_amt  total    percent
0                            Citibank        16561  87718  18.879819
1                         Capital One        12740  87718  14.523815
2                JPMorgan Chase & Co.        10203  87718  11.631592
3                     Bank of America         8995  87718  10.254452
4                 Synchrony Financial         8637  87718   9.846326
..                                ...          ...    ...        ...
416           Allied Data Corporation            1  87718   0.001140
417                 Asta Funding, Inc            1  87718   0.001140
418         Van Ru Credit Corporation            1  87718   0.001140
419                Razor Capital, LLC            1  87718   0.001140
420  Regional Acquisition Group, Inc.            1  87718   0.001140

[421 rows x 4 columns]
#+end_src
* 基本的操作
** ASでカラムに別名をつける。dataworldではダブルクオートをつけても日本語を使えないよう
#+begin_src sql

SELECT issue AS mondai
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
                                 mondai
0                     Billing statement
1                  APR or interest rate
2                    Delinquent account
3                      Billing disputes
4         Credit line increase/decrease
..                                  ...
95  Unsolicited issuance of credit card
96                       Payoff process
97                     Billing disputes
98                    Billing statement
99                                Other

[100 rows x 1 columns]
#+end_src
** DISTINCTを使ってcompanyの重複をなくす
#+begin_src sql

SELECT DISTINCT company
FROM credit_card_complaints;
#+end_src

#+begin_src
                              company
0              Goldman Sachs Bank USA
1     Automatic Data Processing, Inc.
2          Citi Management Group, LLC
3     Lyons, Doughty & Veldhuis, P.C.
4           Weinman Acquisition Group
..                                ...
416     Federated Capital Corporation
417                          Experian
418                      Conn's, Inc.
419                Razor Capital, LLC
420  Regional Acquisition Group, Inc.

[421 rows x 1 columns]
#+end_src
** DISTINCTしたレコードのほかのカラムを出す
#+begin_src sql

SELECT DISTINCT company,
                state
FROM credit_card_complaints;
#+end_src

#+begin_src
                               company state
0                         E*Trade Bank    MA
1                          Capital One    TX
2                        Commerce Bank    KS
3     Continental Finance Company, LLC    GA
4                         Barclays PLC    IN
...                                ...   ...
2569                     PNC Bank N.A.    VA
2570      Platinum Holdings Group, LLC    PA
2571               Ally Financial Inc.    MO
2572              First Tennessee Bank    TX
2573                   Associated Bank    AZ

[2574 rows x 2 columns]
#+end_src
** WHEREで条件指定する
#+begin_src sql

SELECT issue
FROM credit_card_complaints
WHERE company = 'Citibank'
LIMIT 100;
#+end_src

#+begin_src
                                  issue
0                     Billing statement
1         Credit line increase/decrease
2            Closing/Cancelling account
3                        Payoff process
4                      Billing disputes
..                                  ...
95                     Billing disputes
96                     Billing disputes
97                             Late fee
98            Advertising and marketing
99  Unsolicited issuance of credit card

[100 rows x 1 columns]
#+end_src
** 値を2倍にしたカラムを作成
#+begin_src sql

SELECT complaint_id,
       (CAST(complaint_id AS float) * 2) AS complaint_id_x2
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
   complaint_id  complaint_id_x2
0        469026         938052.0
1        469131         938262.0
2        479990         959980.0
3        475777         951554.0
4        469473         938946.0
..          ...              ...
95       466061         932122.0
96       466091         932182.0
97       464970         929940.0
98       465004         930008.0
99       482668         965336.0

[100 rows x 2 columns]
#+end_src
** 計算機として使う...FROMは不要
#+begin_src sql

SELECT 100 * 3 AS keisan;
#+end_src

#+begin_src
   keisan
0     300
#+end_src
** 否定演算子 - 結果はNo results
#+begin_src sql

SELECT *
FROM credit_card_complaints
WHERE product <> 'Credit card'
LIMIT 100;
#+end_src

#+begin_src
Empty DataFrame
Columns: [complaint_id, date_received, product, sub_product, issue, sub_issue, consumer_complaint_narrative, company_public_response, company, state, zip_code, tags, consumer_consent_provided, submitted_via, date_sent, company_response_to_consumer, timely_response, consumer_disputed]
Index: []
#+end_src
** 数値で条件指定
#+begin_src sql

SELECT complaint_id
FROM credit_card_complaints
WHERE CAST(complaint_id AS float) >= 460000
LIMIT 100;
#+end_src

#+begin_src
   complaint_id
0        469026
1        469131
2        479990
3        475777
4        469473
..          ...
95       466091
96       464970
97       465004
98       482668
99       465017

[100 rows x 1 columns]
#+end_src
** 計算結果で条件指定
#+begin_src sql

SELECT complaint_id
FROM credit_card_complaints
WHERE CAST(complaint_id AS FLOAT) + CAST(zip_code AS FLOAT) >= 460000
LIMIT 100;
#+end_src

#+begin_src
   complaint_id
0        469026
1        469131
2        479990
3        475777
4        469473
..          ...
95       466061
96       466091
97       464970
98       465004
99       482668

[100 rows x 1 columns]
#+end_src
** NULLに比較演算子は使えない。IS NULLを使う
#+begin_src sql

SELECT company,
       tags
FROM credit_card_complaints
WHERE tags IS NULL
LIMIT 100;
#+end_src

#+begin_src
                 company  tags
0               Citibank  None
1    Synchrony Financial  None
2                   Amex  None
3               Citibank  None
4   JPMorgan Chase & Co.  None
..                   ...   ...
95       Bank of America  None
96              Citibank  None
97              Citibank  None
98           Capital One  None
99           Capital One  None

[100 rows x 2 columns]
#+end_src
** ↑の結果のnullに対して<>を使っても認識しないことを確認
#+begin_src sql

SELECT *
FROM
  (SELECT company,
          tags
   FROM credit_card_complaints
   WHERE tags IS NULL
   LIMIT 100) null_tag
WHERE tags <> '280';
#+end_src

#+begin_src
Empty DataFrame
Columns: [company, tags]
Index: []
#+end_src
** NULLでないときはIS NOT NULLを使う
#+begin_src sql

SELECT company,
       tags
FROM credit_card_complaints
WHERE tags IS NOT NULL
LIMIT 100;
#+end_src

#+begin_src
                  company            tags
0             Capital One   Servicemember
1                Citibank  Older American
2   Wells Fargo & Company   Servicemember
3   Wells Fargo & Company  Older American
4                    Amex  Older American
..                    ...             ...
95            Capital One  Older American
96        Bank of America  Older American
97        Bank of America  Older American
98               Citibank  Older American
99    Synchrony Financial  Older American

[100 rows x 2 columns]
#+end_src
** NOTで条件反転
#+begin_src sql

SELECT product,
       complaint_id
FROM credit_card_complaints
WHERE NOT CAST(complaint_id AS FLOAT) >= 400000
LIMIT 100
#+end_src

#+begin_src
        product complaint_id
0   Credit card        16536
1   Credit card        16547
2   Credit card       120836
3   Credit card        16728
4   Credit card        28836
..          ...          ...
95  Credit card       396874
96  Credit card       396915
97  Credit card       396969
98  Credit card       397398
99  Credit card       397471

[100 rows x 2 columns]
#+end_src
** ORでおかしくなる例。companyの条件が無視されている。ANDが優先されるためカッコが必要。
#+begin_src sql

SELECT company,
       issue
FROM credit_card_complaints
WHERE company = 'Citibank'
  AND issue = 'Late fee'
  OR issue = 'Payoff process'
LIMIT 100
#+end_src

#+begin_src
                  company           issue
0   Wells Fargo & Company  Payoff process
1                Citibank  Payoff process
2                Citibank  Payoff process
3                Citibank  Payoff process
4            U.S. Bancorp  Payoff process
..                    ...             ...
95               Citibank        Late fee
96        Bank of America  Payoff process
97               Citibank        Late fee
98        Bank of America  Payoff process
99               Discover  Payoff process

[100 rows x 2 columns]
#+end_src
** カッコをつけて正しい結果になった
#+begin_src sql

SELECT company,
       issue
FROM credit_card_complaints
WHERE company = 'Citibank'
  AND (issue = 'Late fee'
       OR issue = 'Payoff process')
LIMIT 100
#+end_src

#+begin_src
     company           issue
0   Citibank  Payoff process
1   Citibank  Payoff process
2   Citibank  Payoff process
3   Citibank        Late fee
4   Citibank        Late fee
..       ...             ...
95  Citibank        Late fee
96  Citibank  Payoff process
97  Citibank  Payoff process
98  Citibank  Payoff process
99  Citibank        Late fee

[100 rows x 2 columns]
#+end_src
** 計算した値を条件に使う
#+begin_src sql

SELECT complaint_id,
       (CAST(complaint_id AS float) * 2) AS complaint_id_x2
FROM credit_card_complaints
WHERE (CAST(complaint_id AS float) * 2) > 1000000
LIMIT 100;
#+end_src

#+begin_src
   complaint_id  complaint_id_x2
0        501134        1002268.0
1        500697        1001394.0
2        500094        1000188.0
3        502104        1004208.0
4        500232        1000464.0
..          ...              ...
95       524630        1049260.0
96       525816        1051632.0
97       531767        1063534.0
98       532780        1065560.0
99       518623        1037246.0

[100 rows x 2 columns]
#+end_src
* キャスト
** floatに型キャストする
#+begin_src sql

SELECT CAST(complaint_id AS float) AS complaint_id
FROM bank_account_complaints
LIMIT 10;
#+end_src

#+begin_src
   complaint_id
0      468889.0
1      468879.0
2      468949.0
3      468981.0
4      469185.0
5      475273.0
6      469309.0
7      469414.0
8      469446.0
9      469447.0
#+end_src
** intに型キャストする
#+begin_src sql

SELECT CAST(complaint_id AS int) AS complaint_id,
       date_received,
       product,
       sub_product,
       issue,
       company,
       state,
       zip_code,
       submitted_via,
       date_sent,
       company_response_to_consumer,
       timely_response,
       consumer_disputed
FROM bank_account_complaints
WHERE state = 'CA'
  AND consumer_disputed = 'No'
  AND company = 'Wells Fargo & Company'
LIMIT 5;
#+end_src

#+begin_src
   complaint_id date_received  ... timely_response consumer_disputed
0        468889    2013-07-29  ...             Yes                No
1        469185    2013-07-29  ...             Yes                No
2        469446    2013-07-29  ...             Yes                No
3        471075    2013-07-31  ...             Yes                No
4        463525    2013-07-22  ...             Yes                No

[5 rows x 13 columns]
#+end_src
* 使い方
** 全表示
#+begin_src sql

SELECT *
FROM credit_card_complaints
LIMIT 100;
#+end_src

#+begin_src
   complaint_id date_received  ... timely_response consumer_disputed
0        469026    2013-07-29  ...             Yes               Yes
1        469131    2013-07-29  ...             Yes                No
2        479990    2013-07-29  ...             Yes                No
3        475777    2013-07-29  ...             Yes                No
4        469473    2013-07-29  ...             Yes               Yes
..          ...           ...  ...             ...               ...
95       466061    2013-07-25  ...             Yes                No
96       466091    2013-07-25  ...             Yes                No
97       464970    2013-07-24  ...             Yes                No
98       465004    2013-07-24  ...             Yes                No
99       482668    2013-08-07  ...             Yes                No

[100 rows x 18 columns]
#+end_src
** COUNT
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints;
#+end_src

#+begin_src
   count
0  87718
#+end_src
** where: IS NOT NULL
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src

#+begin_src
   count
0  17433
#+end_src
** where: IS NULL
#+begin_src sql

SELECT COUNT(*)
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src

#+begin_src
   count
0  70285
#+end_src
* 集計関数
** COUNTで数を数える/nullのtagsカラムを除外してカウントする
#+begin_src sql

SELECT count(*),
       count(tags)
FROM credit_card_complaints
#+end_src

#+begin_src
   count  count
0  87718  13258
#+end_src
** 苦情IDを合算する
#+begin_src sql

SELECT SUM(cast(complaint_id AS int))
FROM credit_card_complaints
#+end_src

#+begin_src
            sum
0  101000252916
#+end_src
** 苦情IDの平均
#+begin_src sql

SELECT AVG(cast(complaint_id AS int))
FROM credit_card_complaints
#+end_src

#+begin_src
            avg
0  1.151420e+06
#+end_src
** 最小・最大の苦情ID
#+begin_src sql

SELECT MAX(cast(complaint_id AS int)),
       MIN(cast(complaint_id AS int))
FROM credit_card_complaints
#+end_src

#+begin_src
       max  min
0  2428845    1
#+end_src
** 重複なしの会社の数。COUNTとDISTINCTを使う
#+begin_src sql

SELECT COUNT(DISTINCT company)
FROM credit_card_complaints
#+end_src

#+begin_src
   count
0    421
#+end_src
** 苦情の理由ランキング
#+begin_src sql

SELECT issue,
       COUNT(issue)
FROM credit_card_complaints
GROUP BY issue
ORDER BY COUNT DESC
#+end_src

#+begin_src
                                       issue  count
0                           Billing disputes  14827
1                                      Other   9144
2      Identity theft / Fraud / Embezzlement   8330
3                 Closing/Cancelling account   6291
4                       APR or interest rate   5463
5                                   Late fee   3576
6      Customer service / Customer relations   3458
7                         Delinquent account   3155
8                       Credit determination   3013
9                  Advertising and marketing   2894
10                                   Rewards   2866
11  Credit card protection / Debt protection   2689
12                         Transaction issue   2654
13                         Billing statement   2590
14                            Payoff process   2277
15             Credit line increase/decrease   2146
16                                 Other fee   2141
17       Unsolicited issuance of credit card   1815
18                          Credit reporting   1696
19                          Balance transfer   1104
20                      Collection practices   1001
21                   Collection debt dispute    901
22               Forbearance / Workout plans    547
23              Application processing delay    522
24                                   Privacy    485
25                                Bankruptcy    441
26                               Arbitration    341
27                           Sale of account    337
28                              Cash advance    243
29                      Balance transfer fee    219
30                             Overlimit fee    213
31                          Cash advance fee    194
32                        Convenience checks    145
#+end_src
** Citibankの苦情の理由ランキング。条件の位置に注意
#+begin_src sql

SELECT issue,
       COUNT(issue)
FROM credit_card_complaints
WHERE company = 'Citibank'
GROUP BY issue
ORDER BY COUNT DESC
#+end_src

#+begin_src
                                       issue  count
0                           Billing disputes   3153
1                                      Other   1541
2      Identity theft / Fraud / Embezzlement   1327
3                 Closing/Cancelling account   1069
4                       APR or interest rate   1009
5                                   Late fee    895
6      Customer service / Customer relations    732
7                          Billing statement    701
8                       Credit determination    611
9   Credit card protection / Debt protection    584
10                        Delinquent account    583
11                 Advertising and marketing    488
12                                 Other fee    476
13                            Payoff process    466
14                                   Rewards    455
15                         Transaction issue    421
16             Credit line increase/decrease    401
17                          Credit reporting    304
18       Unsolicited issuance of credit card    266
19                      Collection practices    201
20                   Collection debt dispute    168
21                          Balance transfer    159
22               Forbearance / Workout plans    119
23                                   Privacy     80
24              Application processing delay     80
25                           Sale of account     56
26                               Arbitration     55
27                                Bankruptcy     51
28                          Cash advance fee     28
29                      Balance transfer fee     26
30                             Overlimit fee     21
31                              Cash advance     19
32                        Convenience checks     16
#+end_src
** SELECTが先に実行されるので、別名をGROUP BYで使うことはできない。PostgreSQLでは実行可能。
#+begin_src sql

SELECT company AS c
FROM credit_card_complaints
GROUP BY c
#+end_src

#+begin_src
                                    c
0              Goldman Sachs Bank USA
1     Automatic Data Processing, Inc.
2          Citi Management Group, LLC
3     Lyons, Doughty & Veldhuis, P.C.
4           Weinman Acquisition Group
..                                ...
416     Federated Capital Corporation
417                          Experian
418                      Conn's, Inc.
419                Razor Capital, LLC
420  Regional Acquisition Group, Inc.

[421 rows x 1 columns]
#+end_src
** ↓と同じ
#+begin_src sql

SELECT DISTINCT company
FROM credit_card_complaints
#+end_src

#+begin_src
                              company
0              Goldman Sachs Bank USA
1     Automatic Data Processing, Inc.
2          Citi Management Group, LLC
3     Lyons, Doughty & Veldhuis, P.C.
4           Weinman Acquisition Group
..                                ...
416     Federated Capital Corporation
417                          Experian
418                      Conn's, Inc.
419                Razor Capital, LLC
420  Regional Acquisition Group, Inc.

[421 rows x 1 columns]
#+end_src
** ↑と同じ
#+begin_src sql

SELECT company
FROM credit_card_complaints
GROUP BY company
#+end_src

#+begin_src
                              company
0              Goldman Sachs Bank USA
1     Automatic Data Processing, Inc.
2          Citi Management Group, LLC
3     Lyons, Doughty & Veldhuis, P.C.
4           Weinman Acquisition Group
..                                ...
416     Federated Capital Corporation
417                          Experian
418                      Conn's, Inc.
419                Razor Capital, LLC
420  Regional Acquisition Group, Inc.

[421 rows x 1 columns]
#+end_src
** 集約したグループから含まれる行数が2行のものを選択する。集約に対して条件を指定するのがHAVING
#+begin_src sql

SELECT company,
       COUNT(*)
FROM credit_card_complaints
GROUP BY company
HAVING COUNT(*) = 2;
#+end_src

#+begin_src
                                              company  count
0                     Legal Recovery Law Offices, Inc      2
1                                           Convergys      2
2                                    Aqua Finance Inc      2
3                        Duvera Billing Services, LLC      2
4                     Western Alliance Bancorporation      2
5                        Walter Lee & Associates, LLC      2
6                       Asset Recovery Solutions, LLC      2
7                          Prosperity Bancshares, Inc      2
8                     Monarch Recovery Holdings, Inc.      2
9                      Alliant Capital Management LLC      2
10                           Love, Beal & Nixon, P.C.      2
11                        Umpqua Holdings Corporation      2
12                               Forster & Garbus LLP      2
13                           Avant Credit Corporation      2
14                              Credit Bureau of Napa      2
15                        National Check Bureau, Inc.      2
16                               P&L Acquisitions LLC      2
17                               Zwicker & Associates      2
18  Fidelity National Information Services, Inc. (...      2
19                     Oliphant Financial Corporation      2
20                                 CAC Financial Corp      2
21                           Lending Club Corporation      2
22                          Nationwide Acceptance LLC      2
23                                          LoanDepot      2
24                   Halsted Financial Services, LLC.      2
25                                        Google Inc.      2
26                        NCC Business Services, Inc.      2
27                                   Eltman Law, P.C.      2
28                       Platinum Holdings Group, LLC      2
29                             Allgate Financial, LLC      2
30                                   Hunt & Henriques      2
31                 Scott Fetzer Financial Group, Inc.      2
32                               One Technologies, LP      2
33              Daniels Norelli Scully & Cecere, P.C.      2
34                                          MoneyGram      2
35                                     East West Bank      2
36                  Mercantile Adjustment Bureau, LLC      2
37                    Legal Prevention Services, LLC.      2
38               New Century Financial Services, Inc.      2
39                                           EverBank      2
40                             Messerli & Kramer P.A.      2
41                        Crown Asset Management, LLC      2
42                        Kirschenbaum & Phillips P.C      2
43                                  US Gold Cards Inc      2
44                               Rubin & Rothman, LLC      2
45                           Neuheisel Law Firm, P.C.      2
46                                   OpenRoad Lending      2
47                                     Logan View LLC      2
48                                       GM Financial      2
49                                 City National Bank      2
50                         Couch Conville & Blitt LLC      2
51                                           Rabobank      2
52                             Stenger & Stenger, P.C      2
53                             Selip & Stylianou, LLP      2
54                              Real Time Resolutions      2
55                                         LexisNexis      2
56                      Federated Capital Corporation      2
#+end_src
** HAVINGがないバージョン
#+begin_src sql

SELECT company,
       COUNT(*)
FROM credit_card_complaints
GROUP BY company
#+end_src

#+begin_src
                              company  count
0              Goldman Sachs Bank USA      1
1     Automatic Data Processing, Inc.      1
2          Citi Management Group, LLC      1
3     Lyons, Doughty & Veldhuis, P.C.      1
4           Weinman Acquisition Group      1
..                                ...    ...
416     Federated Capital Corporation      2
417                          Experian     50
418                      Conn's, Inc.     14
419                Razor Capital, LLC      1
420  Regional Acquisition Group, Inc.      1

[421 rows x 2 columns]
#+end_src
** HAVINGで条件指定する
#+begin_src sql

SELECT company,
       AVG(CAST(complaint_id AS INT))
FROM credit_card_complaints
GROUP BY company
HAVING AVG(CAST(complaint_id AS INT)) <= 100000;
#+end_src

#+begin_src
                company      avg
0  Kramer & Frank, P.C.  92025.0
#+end_src
** HAVINGがないバージョン
#+begin_src sql

SELECT company,
       AVG(CAST(complaint_id AS INT))
FROM credit_card_complaints
GROUP BY company
#+end_src

#+begin_src
                              company           avg
0              Goldman Sachs Bank USA  2.327895e+06
1     Automatic Data Processing, Inc.  2.046060e+06
2          Citi Management Group, LLC  1.868638e+06
3     Lyons, Doughty & Veldhuis, P.C.  1.936288e+06
4           Weinman Acquisition Group  1.882740e+06
..                                ...           ...
416     Federated Capital Corporation  8.256790e+05
417                          Experian  1.135318e+06
418                      Conn's, Inc.  1.881726e+06
419                Razor Capital, LLC  7.575410e+05
420  Regional Acquisition Group, Inc.  1.127463e+06

[421 rows x 2 columns]
#+end_src
** ORDER BY 複数
#+begin_src sql

SELECT company,
       issue
FROM credit_card_complaints
ORDER BY company,
         issue
#+end_src

#+begin_src
                                 company                                     issue
0                  ACE Cash Express Inc.                      Credit determination
1      ADR ARBITRATION SERVICES (Closed)                               Arbitration
2                              AES/PHEAA                        Delinquent account
3            AMRON PROFESSIONAL SERVICES     Identity theft / Fraud / Embezzlement
4                    APPLE RECOVERY, LLC  Credit card protection / Debt protection
...                                  ...                                       ...
87713               Zions Bancorporation                                     Other
87714               Zions Bancorporation                                     Other
87715               Zions Bancorporation       Unsolicited issuance of credit card
87716               Zwicker & Associates                        Delinquent account
87717               Zwicker & Associates                                     Other

[87718 rows x 2 columns]
#+end_src
** ソートキーに別名が使用できる
#+begin_src sql

SELECT company AS c
FROM credit_card_complaints
ORDER BY c
#+end_src

#+begin_src
                                       c
0                  ACE Cash Express Inc.
1      ADR ARBITRATION SERVICES (Closed)
2                              AES/PHEAA
3            AMRON PROFESSIONAL SERVICES
4                    APPLE RECOVERY, LLC
...                                  ...
87713               Zions Bancorporation
87714               Zions Bancorporation
87715               Zions Bancorporation
87716               Zwicker & Associates
87717               Zwicker & Associates

[87718 rows x 1 columns]
#+end_src
* ビュー
** credit_wを作成する(command)
#+begin_src sql

CREATE VIEW credit_card_w_complaints AS
SELECT *
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src
** credit_woを作成する(command)
#+begin_src sql

CREATE VIEW credit_card_wo_complaints AS
SELECT *
FROM credit_card_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src
** bank_wを作成する(command)
#+begin_src sql

CREATE VIEW bank_account_w_complaints AS
SELECT *
FROM bank_account_complaints
WHERE consumer_complaint_narrative IS NOT NULL;
#+end_src
** bank_woを作成する(command)
#+begin_src sql

CREATE VIEW bank_account_wo_complaints AS
SELECT *
FROM bank_account_complaints
WHERE consumer_complaint_narrative IS NULL;
#+end_src
** viewから取得する
#+begin_src sql

SELECT *
FROM credit_card_w_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0      1297939    2015-03-24  ...             Yes                No
1      1296693    2015-03-23  ...             Yes               Yes
2      1295056    2015-03-23  ...             Yes                No
3      1296880    2015-03-23  ...             Yes                No
4      1296890    2015-03-23  ...             Yes                No

[5 rows x 18 columns]
#+end_src
** UNION(command)
#+begin_src sql

CREATE VIEW with_complaints AS
SELECT *
FROM credit_card_w_complaints
UNION ALL
SELECT *
FROM bank_account_w_complaints;
#+end_src
** with_complaints表示
#+begin_src sql

SELECT *
FROM with_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0      1297939    2015-03-24  ...             Yes                No
1      1296693    2015-03-23  ...             Yes               Yes
2      1295056    2015-03-23  ...             Yes                No
3      1296880    2015-03-23  ...             Yes                No
4      1296890    2015-03-23  ...             Yes                No

[5 rows x 18 columns]
#+end_src
** UNION(command)
#+begin_src sql

CREATE VIEW without_complaints AS
SELECT *
FROM credit_card_wo_complaints
UNION ALL
SELECT *
FROM bank_account_wo_complaints;
#+end_src
** without_complaints表示
#+begin_src sql

SELECT *
FROM without_complaints
LIMIT 5;
#+end_src

#+begin_src
  complaint_id date_received  ... timely_response consumer_disputed
0       469026    2013-07-29  ...             Yes               Yes
1       469131    2013-07-29  ...             Yes                No
2       479990    2013-07-29  ...             Yes                No
3       475777    2013-07-29  ...             Yes                No
4       469473    2013-07-29  ...             Yes               Yes

[5 rows x 18 columns]
#+end_src
** credit_card_without_complaints
#+begin_src sql

SELECT count(*)
FROM credit_card_wo_complaints;
#+end_src

#+begin_src
   count
0  70285
#+end_src
** 申し立てがない
#+begin_src sql

SELECT count(*)
FROM without_complaints
#+end_src

#+begin_src
    count
0  141236
#+end_src
** クレジットカードの申立がないものを除外
#+begin_src sql

SELECT count(*)
FROM
  (SELECT *
   FROM without_complaints
   EXCEPT SELECT *
   FROM credit_card_wo_complaints) ppg;
#+end_src

#+begin_src
   count
0  70951
#+end_src
** 合成したカラムを表示する
#+begin_src sql

SELECT complaint_id,
       product,
       company,
       zip_code,
       complaint_id || '-' || product || '-' || company || '-' || zip_code AS CONCAT
FROM credit_card_complaints
LIMIT 10
#+end_src

#+begin_src
  complaint_id      product  ... zip_code                                          concat
0       469026  Credit card  ...    45247               469026-Credit card-Citibank-45247
1       469131  Credit card  ...    98548    469131-Credit card-Synchrony Financial-98548
2       479990  Credit card  ...    78232                   479990-Credit card-Amex-78232
3       475777  Credit card  ...    32226            475777-Credit card-Capital One-32226
4       469473  Credit card  ...    53066               469473-Credit card-Citibank-53066
5       470828  Credit card  ...    89108  470828-Credit card-Wells Fargo & Company-89108
6       470852  Credit card  ...    78249               470852-Credit card-Citibank-78249
7       479338  Credit card  ...    19809   479338-Credit card-JPMorgan Chase & Co.-19809
8       480935  Credit card  ...    07018               480935-Credit card-Citibank-07018
9       469738  Credit card  ...    95409  469738-Credit card-Wells Fargo & Company-95409

[10 rows x 5 columns]
#+end_src
